augroup MyAutoCmd
  autocmd!
augroup END

" Set dein paths
let s:vim_dir        = expand('~/.vim')
let s:dein_dir       = s:vim_dir . '/dein'
let s:dein_github    = s:dein_dir . '/repos/github.com'
let s:dein_repo_name = 'Shougo/dein.vim'
let s:dein_repo_dir  = s:dein_github . '/' . s:dein_repo_name
let &runtimepath     = &runtimepath . ',' . s:dein_repo_dir

let s:plugins_dir = expand('~/dotfiles/.vim/conf.d/plugins')

let s:cache_path = expand('~/.cache/dein')
if !dein#load_state(s:cache_path)
  finish
endif

call dein#begin(s:dein_dir)

call dein#add('Shougo/dein.vim')

"------------------------------------
" Buffer
"------------------------------------
call dein#add('lambdalisue/fern.vim', {
      \ 'depends': ['FixCursorHold.nvim'],
      \ 'on_cmd': [
      \   'Fern',
      \ ],
      \ 'hook_add': 'source ' . s:plugins_dir . '/.nvimrc.fern.preload',
      \ })

call dein#add('antoinemadec/FixCursorHold.nvim', {
      \ 'lazy': 1,
      \ })

call dein#add('Yggdroot/indentLine', {
      \ 'hook_add': 'source ' . s:plugins_dir . '/.nvimrc.indentLine.preload',
      \ })

call dein#add('camspiers/lens.vim', {
      \ 'hook_add': 'source ' . s:plugins_dir . '/.nvimrc.lens.vim.preload',
      \ })

call dein#add('scrooloose/nerdtree', {
      \ 'on_cmd': [
      \   'NERDTree',
      \   'NERDTreeToggle',
      \   'NERDTreeFind',
      \ ],
      \ 'hook_add': 'source ' . s:plugins_dir . '/.nvimrc.nerdtree.preload',
      \ })

call dein#add('vim-airline/vim-airline', {
      \ 'depends': ['vim-fugitive', 'vim-airline-themes', 'nvim-lspconfig'],
      \ 'hook_add': 'source ' . s:plugins_dir . '/.nvimrc.vim-airline.preload',
      \ })

call dein#add('vim-airline/vim-airline-themes', {
      \ 'lazy': 1,
      \ })

call dein#add('liuchengxu/vim-clap', {
      \ 'lazy': 1,
      \ 'build': 'make',
      \ })

"------------------------------------
" Color
"------------------------------------
call dein#add('calorie/colorschemes', {
      \ 'hook_add': 'colorscheme calorie',
      \ })

" call dein#add('whatyouhide/vim-gotham', {
"       \ 'hook_add': 'colorscheme gotham256',
"       \ })

"------------------------------------
" Completion
"------------------------------------
call dein#add('Shougo/deoplete.nvim', {
      \ 'lazy': 1,
      \ 'depends': ['context_filetype.vim', 'deoplete-lsp'],
      \ 'if': 'has("python3")',
      \ 'on_event': 'InsertEnter',
      \ 'hook_source': 'source ' . s:plugins_dir . '/.nvimrc.deoplete.nvim',
      \ })

call dein#add('deoplete-plugins/deoplete-lsp', {
      \ 'lazy': 1,
      \ 'depends': ['nvim-lspconfig'],
      \ 'hook_source': 'source ' . s:plugins_dir . '/.nvimrc.deoplete-lsp.nvim',
      \ })

call dein#add('Shougo/neosnippet.vim', {
      \ 'lazy': 1,
      \ 'depends': ['context_filetype.vim', 'neosnippet-snippets'],
      \ 'on_event': 'InsertCharPre',
      \ 'hook_source': 'source ' . s:plugins_dir . '/.nvimrc.neosnippet.vim',
      \ })

call dein#add('Shougo/neosnippet-snippets', {
      \ 'lazy': 1,
      \ })

"------------------------------------
" Edit
"------------------------------------
call dein#add('cohama/lexima.vim', {
      \ 'lazy': 1,
      \ 'on_event': 'InsertEnter',
      \ 'hook_add': 'source ' . s:plugins_dir . '/.nvimrc.lexima.vim.preload',
      \ })

call dein#add('Shougo/context_filetype.vim', {
      \ 'lazy': 1,
      \ })

call dein#add('neovim/nvim-lspconfig', {
      \ 'hook_add': 'source ' . s:plugins_dir . '/.nvimrc.nvim-lspconfig.preload',
      \ })

call dein#add('AndrewRadev/switch.vim', {
      \ 'lazy': 1,
      \ 'on_cmd': [
      \   'Switch',
      \ ],
      \ 'hook_add': 'source ' . s:plugins_dir . '/.nvimrc.switch.vim.preload',
      \ })

call dein#add('godlygeek/tabular', {
      \ 'lazy': 1,
      \ 'on_cmd': [
      \   'Tabularize', 'AddTabularPipeline'
      \ ],
      \ 'hook_add': 'source ' . s:plugins_dir . '/.nvimrc.tabular.preload',
      \ })

call dein#add('tomtom/tcomment_vim', {
      \ 'lazy': 1,
      \ 'on_cmd': [
      \   'TComment', 'TCommentAs', 'TCommentMaybeInline',
      \ ],
      \ 'hook_add': 'source ' . s:plugins_dir . '/.nvimrc.tcomment_vim.preload',
      \ })

call dein#add('tpope/vim-endwise.git')

call dein#add('brglng/vim-im-select', {
      \ 'lazy': 1,
      \ 'on_event': 'InsertEnter',
      \ 'hook_source': 'source ' . s:plugins_dir . '/.nvimrc.vim-im-select',
      \ })

call dein#add('osyo-manga/vim-over', {
      \ 'lazy': 1,
      \ 'on_cmd': [
      \   'OverCommandLine',
      \ ],
      \ 'hook_add': 'source ' . s:plugins_dir . '/.nvimrc.vim-over.preload',
      \ })

" call dein#add('rainerborene/vim-reek', {
"       \ 'lazy': 1,
"       \ 'on_cmd': [
"       \   'RunReek',
"       \ ],
"       \ 'hook_add': 'source ' . s:plugins_dir . '/.nvimrc.vim-reek.preload',
"       \ })

call dein#add('tpope/vim-surround', {
      \ 'lazy': 1,
      \ 'on_map': [
      \   ['nx', '<Plug>Csurround'], ['nx', '<Plug>Dsurround'],
      \   ['nx', '<Plug>VgSurround'], ['nx', '<Plug>VSurround'],
      \   ['nx', '<Plug>Yssurround'], ['nx', '<Plug>YSsurround'],
      \   ['nx', '<Plug>Ysurround'], ['nx', '<Plug>YSurround'],
      \ ],
      \ 'hook_add': 'source ' . s:plugins_dir . '/.nvimrc.vim-surround.preload',
      \ })

call dein#add('svermeulen/vim-yoink', {
      \ 'lazy': 1,
      \ 'on_map': [
      \   ['n', '<Plug>(YoinkPostPasteSwapBack)'], ['n', '<Plug>(YoinkPostPasteSwapForward)'],
      \   ['n', '<Plug>(YoinkPaste_p)'], ['n', '<Plug>(YoinkPaste_P)'],
      \ ],
      \ 'hook_add': 'source ' . s:plugins_dir . '/.nvimrc.vim-yonik.preload',
      \ 'hook_source': 'source ' . s:plugins_dir . '/.nvimrc.vim-yonik',
      \ })

"------------------------------------
" Search/Move
"------------------------------------
call dein#add('rhysd/clever-f.vim', {
      \ 'on_map': ['<Plug>(clever-f-f)', '<Plug>(clever-f-F)'],
      \ 'hook_add': 'source ' . s:plugins_dir . '/.nvimrc.clever-f.vim.preload',
      \ })

call dein#add('osyo-manga/vim-anzu', {
      \ 'lazy': 1,
      \ 'on_map': [
      \   ['n', '<Plug>(anzu-n-with-echo)'], ['n', '<Plug>(anzu-N-with-echo)'],
      \   ['n', '<Plug>(anzu-star-with-echo)'], ['n', '<Plug>(anzu-sharp-with-echo)'],
      \ ],
      \ 'hook_add': 'source ' . s:plugins_dir . '/.nvimrc.vim-anzu.preload',
      \ })

" call dein#add('szw/vim-tags', {
"       \ 'lazy': 1,
"       \ 'depends': 'vim-dispatch',
"       \ 'on_cmd': [
"       \   'TagsGenerate',
"       \ ],
"       \ 'hook_source': 'source ' . s:plugins_dir . '/.nvimrc.vim-tags',
"       \ })

call dein#add('t9md/vim-textmanip', {
      \ 'lazy': 1,
      \ 'on_map': [
      \   ['x', '<Plug>(textmanip-move-down)'], ['x', '<Plug>(textmanip-move-left)'],
      \   ['x', '<Plug>(textmanip-move-right)'], ['x', '<Plug>(textmanip-move-up)'],
      \ ],
      \ 'hook_add': 'source ' . s:plugins_dir . '/.nvimrc.vim-textmanip.preload',
      \ })

call dein#add('Lokaltog/vim-easymotion', {
      \ 'lazy': 1,
      \ 'on_map': ',',
      \ 'hook_source': 'source ' . s:plugins_dir . '/.nvimrc.vim-easymotion',
      \ })

call dein#add('kana/vim-smartword', {
      \ 'lazy': 1,
      \ 'on_map': [
      \   ['nx', '<Plug>(smartword-b)'], ['nx', '<Plug>(smartword-e)'],
      \   ['nx', '<Plug>(smartword-ge)'], ['nx', '<Plug>(smartword-w)'],
      \ ],
      \ 'hook_add': 'source ' . s:plugins_dir . '/.nvimrc.vim-smartword.preload',
      \ })

"------------------------------------
" Syntax
"------------------------------------
" call dein#add('scrooloose/syntastic', {
"       \ 'lazy': 1,
"       \ 'on_event': 'InsertEnter',
"       \ 'hook_source': 'source ' . s:plugins_dir . '/.nvimrc.syntastic',
"       \ })

call dein#add('leafgarland/typescript-vim', {
      \ 'lazy': 1,
      \ 'on_ft': [
      \   'typescript'
      \ ],
      \ })

call dein#add('vim-scripts/dbext.vim', {
      \ 'lazy': 1,
      \ 'on_ft': [
      \   'sql'
      \ ],
      \ 'hook_source': 'source ' . s:plugins_dir . '/.nvimrc.dbext.vim',
      \ })

call dein#add('elzr/vim-json', {
      \ 'lazy': 1,
      \ 'on_ft': [
      \   'json'
      \ ],
      \ 'hook_source': 'source ' . s:plugins_dir . '/.nvimrc.vim-json',
      \ })

call dein#add('slim-template/vim-slim', {
      \ 'lazy': 1,
      \ 'on_ft': [
      \   'slim'
      \ ],
      \ })

call dein#add('hashivim/vim-terraform', {
      \ 'lazy': 1,
      \ 'on_ft': [
      \   'terraform'
      \ ],
      \ })

call dein#add('ianks/vim-tsx', {
      \ 'lazy': 1,
      \ 'on_ft': [
      \   'typescript'
      \ ],
      \ })

"------------------------------------
" textobj
"------------------------------------
call dein#add('kana/vim-textobj-entire', {
      \ 'lazy': 1,
      \ 'depends': 'vim-textobj-user',
      \ 'on_map': [
      \   ['nx', '<Plug>(textobj-entire-a)'],
      \   ['nx', '<Plug>(textobj-entire-i)'],
      \ ],
      \ 'hook_add': 'source ' . s:plugins_dir . '/.nvimrc.vim-textobj-entire.preload',
      \ })

call dein#add('kana/vim-textobj-indent', {
      \ 'lazy': 1,
      \ 'depends': 'vim-textobj-user',
      \ 'on_map': [
      \   ['nx', '<Plug>(textobj-indent-a)'],
      \   ['nx', '<Plug>(textobj-indent-i)'],
      \   ['nx', '<Plug>(textobj-indent-same-a)'],
      \   ['nx', '<Plug>(textobj-indent-same-i)'],
      \ ],
      \ 'hook_add': 'source ' . s:plugins_dir . '/.nvimrc.vim-textobj-indent.preload',
      \ })

call dein#add('kana/vim-textobj-user', {
      \ 'lazy': 1,
      \ })

"------------------------------------
" Unite
"------------------------------------
call dein#add('Shougo/denite.nvim', {
      \ 'lazy': 1,
      \ 'on_cmd': [
      \   'Denite',
      \ ],
      \ 'hook_add': 'source ' . s:plugins_dir . '/.nvimrc.denite.preload',
      \ 'hook_source': 'source ' . s:plugins_dir . '/.nvimrc.denite',
      \ 'depends': ['neomru.vim', 'neoyank.vim', 'vim-clap'],
      \ })

call dein#add('Shougo/neomru.vim', {
      \ 'lazy': 1,
      \ })

call dein#add('Shougo/neoyank.vim', {
      \ 'lazy': 1,
      \ })

"------------------------------------
" Utility
"------------------------------------
call dein#add('rhysd/ghpr-blame.vim', {
      \ 'lazy': 1,
      \ 'on_cmd': [
      \   'GHPRBlame', 'GHPRBlameQuit',
      \ ],
      \ 'hook_add': 'source ' . s:plugins_dir . '/.nvimrc.ghpr-blame.vim',
      \ })

call dein#add('vim-scripts/sudo.vim', {
      \ 'lazy': 1,
      \ 'on_cmd': [
      \   'SudoRead', 'SudoWrite',
      \ ],
      \ 'hook_add': 'source ' . s:plugins_dir . '/.nvimrc.sudo.vim.preload',
      \ })

call dein#add('907th/vim-auto-save', {
      \ 'hook_add': 'source ' . s:plugins_dir . '/.nvimrc.vim-auto-save.preload',
      \ })

" call dein#add('tpope/vim-dispatch', {
"       \ 'lazy': 1,
"       \ })

call dein#add('tpope/vim-fugitive', {
      \ 'on_cmd': [
      \   'Git', 'Gstatus', 'Gwrite', 'Glog',
      \   'Gcommit', 'Gblame', 'Ggrep', 'Gdiff',
      \ ],
      \ 'hook_add': 'source ' . s:plugins_dir . '/.nvimrc.vim-fugitive.preload',
      \ })

call dein#add('thinca/vim-quickrun', {
      \ 'lazy': 1,
      \ 'on_cmd': [
      \   'QuickRun',
      \ ],
      \ 'on_map': [
      \   ['nxo', '<Plug>(quickrun)'],
      \ ],
      \ 'hook_add': 'source ' . s:plugins_dir . '/.nvimrc.vim-quickrun.preload',
      \ 'hook_source': 'source ' . s:plugins_dir . '/.nvimrc.vim-quickrun',
      \ })

call dein#add('Shougo/vimproc', {
      \ 'build': 'make',
      \ })

call dein#end()
call dein#save_state()

if !has('vim_starting')
  call dein#call_hook('source')
  call dein#call_hook('post_source')

  syntax enable
  filetype plugin indent on
endif
