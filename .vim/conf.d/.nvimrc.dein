let g:dein_dir   = expand('~/.vim/dein')
let &runtimepath = &runtimepath . ',' . g:dein_dir . '/repos/github.com/Shougo/dein.vim'

let s:conf_dir = expand('~/dotfiles/.vim/conf.d')
let s:plugins_dir = s:conf_dir . '/plugins'

" let g:dein#auto_recache = v:true
let g:dein#lazy_rplugins = v:true
if !dein#min#load_state(g:dein_dir)
  finish
endif

let g:dein#inline_vimrcs = []
let s:rc_path = s:conf_dir . '/.vimrc.'
let s:rcs = [
      \ 'indent',
      \ 'apperance',
      \ 'completion',
      \ 'search',
      \ 'moving',
      \ 'colors',
      \ 'editing',
      \ 'encoding',
      \ 'langs',
      \ ]
for s:rc in s:rcs
  call add(g:dein#inline_vimrcs, s:rc_path . s:rc)
endfor

call dein#begin(g:dein_dir)

call dein#add('Shougo/dein.vim')

"------------------------------------
" Buffer
"------------------------------------
call dein#add('feline-nvim/feline.nvim', {
      \ 'lazy': 1,
      \ 'on_event': 'VimEnter',
      \ 'hook_source': 'source ' . s:plugins_dir . '/.nvimrc.feline.nvim',
      \ })

call dein#add('lambdalisue/fern.vim', {
      \ 'lazy': 1,
      \ 'depends': ['FixCursorHold.nvim'],
      \ 'on_cmd': ['Fern'],
      \ 'hook_add': 'source ' . s:plugins_dir . '/.nvimrc.fern.preload',
      \ })

call dein#add('antoinemadec/FixCursorHold.nvim', { 'lazy': 1 })

call dein#add('beauwilliams/focus.nvim', {
      \ 'hook_add': 'source ' . s:plugins_dir . '/.nvimrc.focus.nvim.preload',
      \ })

call dein#add('lukas-reineke/indent-blankline.nvim', {
      \ 'lazy': 1,
      \ 'on_event': 'BufRead',
      \ 'hook_source': 'source ' . s:plugins_dir . '/.nvimrc.indent-blankline.nvim',
      \ })

call dein#add('liuchengxu/vim-clap', {
      \ 'lazy': 1,
      \ 'on_cmd': ['Clap'],
      \ 'hook_add': 'source ' . s:plugins_dir . '/.nvimrc.vim-clap.preload',
      \ 'build': 'make',
      \ })

"------------------------------------
" Color
"------------------------------------
call dein#add('calorie/calorie.nvim', {
      \ 'depends': ['lush.nvim'],
      \ })

call dein#add('rktjmp/lush.nvim', { 'lazy': 1 })

call dein#add('nvim-treesitter/nvim-treesitter', {
      \ 'lazy': 1,
      \ 'merged': 0,
      \ 'on_event': 'BufRead',
      \ 'hook_post_update': 'TSUpdate',
      \ 'hook_source': 'source ' . s:plugins_dir . '/.nvimrc.nvim-treesitter',
      \ })

"------------------------------------
" Completion
"------------------------------------
call dein#add('hrsh7th/cmp-buffer', { 'lazy': 1 })
call dein#add('saadparwaiz1/cmp_luasnip', { 'lazy': 1 })
call dein#add('hrsh7th/cmp-nvim-lsp', { 'lazy': 1 })
call dein#add('rafamadriz/friendly-snippets', { 'lazy': 1 })

call dein#add('L3MON4D3/LuaSnip', {
      \ 'lazy': 1,
      \ 'depends': ['friendly-snippets'],
      \ 'hook_source': 'source ' . s:plugins_dir . '/.nvimrc.luasnip',
      \ })

call dein#add('hrsh7th/nvim-cmp', {
      \ 'lazy': 1,
      \ 'depends': ['nvim-lspconfig', 'cmp-buffer', 'LuaSnip', 'cmp_luasnip'],
      \ 'on_event': 'BufRead',
      \ 'hook_source': 'source ' . s:plugins_dir . '/.nvimrc.nvim-cmp',
      \ })

"------------------------------------
" Edit
"------------------------------------
call dein#add('numToStr/Comment.nvim', {
      \ 'lazy': 1,
      \ 'on_map': [['nx', '<Plug>(comment_toggle']],
      \ 'hook_add': 'source ' . s:plugins_dir . '/.nvimrc.comment.nvim.preload',
      \ 'hook_source': 'lua require("Comment").setup {}',
      \ })

call dein#add('windwp/nvim-autopairs', {
      \ 'lazy': 1,
      \ 'on_event': 'InsertEnter',
      \ 'hook_source': 'lua require("nvim-autopairs").setup {}',
      \ })

call dein#add('neovim/nvim-lspconfig', {
      \ 'lazy': 1,
      \ 'depends': ['cmp-nvim-lsp'],
      \ 'on_event': 'BufRead',
      \ 'hook_source': 'source ' . s:plugins_dir . '/.nvimrc.nvim-lspconfig',
      \ })

call dein#add('AndrewRadev/switch.vim', {
      \ 'lazy': 1,
      \ 'on_cmd': ['Switch'],
      \ 'hook_add': 'source ' . s:plugins_dir . '/.nvimrc.switch.vim.preload',
      \ })

call dein#add('godlygeek/tabular', {
      \ 'lazy': 1,
      \ 'on_cmd': ['Tabularize', 'AddTabularPipeline'],
      \ 'hook_add': 'source ' . s:plugins_dir . '/.nvimrc.tabular.preload',
      \ })

call dein#add('brglng/vim-im-select', {
      \ 'lazy': 1,
      \ 'on_event': 'InsertEnter',
      \ 'hook_source': 'source ' . s:plugins_dir . '/.nvimrc.vim-im-select',
      \ })

call dein#add('tpope/vim-surround', {
      \ 'lazy': 1,
      \ 'on_map': [
      \   ['nx', '<Plug>Csurround'], ['nx', '<Plug>Dsurround'],
      \   ['nx', '<Plug>VgSurround'], ['nx', '<Plug>VSurround'],
      \   ['nx', '<Plug>Yssurround'], ['nx', '<Plug>YSsurround'],
      \   ['nx', '<Plug>Ysurround'], ['nx', '<Plug>YSurround'],
      \ ],
      \ 'hook_add': 'source ' . s:plugins_dir . '/.nvimrc.vim-surround.preload',
      \ })

call dein#add('svermeulen/vim-yoink', {
      \ 'lazy': 1,
      \ 'on_map': [['nx', '<Plug>(Yoink']],
      \ 'hook_add': 'source ' . s:plugins_dir . '/.nvimrc.vim-yonik.preload',
      \ 'hook_source': 'source ' . s:plugins_dir . '/.nvimrc.vim-yonik',
      \ })

"------------------------------------
" Search/Move
"------------------------------------
call dein#add('rhysd/clever-f.vim', {
      \ 'lazy': 1,
      \ 'on_map': ['<Plug>(clever-f',],
      \ 'hook_add': 'source ' . s:plugins_dir . '/.nvimrc.clever-f.vim.preload',
      \ })

call dein#add('phaazon/hop.nvim', {
      \ 'lazy': 1,
      \ 'on_cmd': [
      \   'HopWord', 'HopWordMW', 'HopLineStart',
      \   'HopLineStartMW', 'HopVertical', 'HopVerticalMW',
      \ ],
      \ 'hook_add': 'source ' . s:plugins_dir . '/.nvimrc.hop.nvim.preload',
      \ 'hook_source': 'lua require("hop").setup {}',
      \ })

call dein#add('terryma/vim-expand-region', {
      \ 'lazy': 1,
      \ 'on_map': [['x', '<Plug>(expand_region']],
      \ 'hook_add': 'source ' . s:plugins_dir . '/.nvimrc.vim-expand-region.preload',
      \ })

call dein#add('t9md/vim-quickhl', {
      \ 'lazy': 1,
      \ 'on_map': [['n', '<Plug>(quickhl']],
      \ 'hook_add': 'source ' . s:plugins_dir . '/.nvimrc.vim-quickhl.preload',
      \ })

call dein#add('t9md/vim-textmanip', {
      \ 'lazy': 1,
      \ 'on_map': [['x', '<Plug>(textmanip-move']],
      \ 'hook_add': 'source ' . s:plugins_dir . '/.nvimrc.vim-textmanip.preload',
      \ })

"------------------------------------
" Test
"------------------------------------
" call dein#add('nvim-neotest/neotest', {
"       \ 'lazy': 1,
"       \ 'depends': [
"       \   'nvim-treesitter', 'FixCursorHold.nvim', 'plenary.nvim',
"       \   'neotest-rspec',
"       \ ],
"       \ 'on_ft': ['ruby'],
"       \ 'hook_add': 'source ' . s:plugins_dir . '/.nvimrc.neotest.preload',
"       \ 'hook_source': 'source ' . s:plugins_dir . '/.nvimrc.neotest',
"       \ })
"
" call dein#add('olimorris/neotest-rspec', { 'lazy': 1 })
" call dein#add('nvim-lua/plenary.nvim', { 'lazy': 1 })

"------------------------------------
" textobj
"------------------------------------
call dein#add('kana/vim-textobj-entire', {
      \ 'lazy': 1,
      \ 'depends': 'vim-textobj-user',
      \ 'on_map': [['nx', '<Plug>(textobj-entire']],
      \ 'hook_add': 'source ' . s:plugins_dir . '/.nvimrc.vim-textobj-entire.preload',
      \ })

call dein#add('kana/vim-textobj-indent', {
      \ 'lazy': 1,
      \ 'depends': 'vim-textobj-user',
      \ 'on_map': [['nx', '<Plug>(textobj-indent']],
      \ 'hook_add': 'source ' . s:plugins_dir . '/.nvimrc.vim-textobj-indent.preload',
      \ })

call dein#add('kana/vim-textobj-user', { 'lazy': 1 })

"------------------------------------
" Utility
"------------------------------------
call dein#add('rhysd/ghpr-blame.vim', {
      \ 'lazy': 1,
      \ 'on_cmd': ['GHPRBlame', 'GHPRBlameQuit'],
      \ 'hook_add': 'source ' . s:plugins_dir . '/.nvimrc.ghpr-blame.vim.preload',
      \ })

call dein#add('glepnir/lspsaga.nvim', {
      \ 'lazy': 1,
      \ 'depends': ['nvim-lspconfig'],
      \ 'on_cmd': ['Lspsaga', 'LSoutlineToggle'],
      \ 'hook_add': 'source ' . s:plugins_dir . '/.nvimrc.lspsaga.nvim.preload',
      \ 'hook_source': 'source ' . s:plugins_dir . '/.nvimrc.lspsaga.nvim',
      \ })

call dein#add('iamcco/markdown-preview.nvim', {
      \ 'lazy': 1,
      \ 'on_ft': ['markdown'],
      \ 'build': 'sh -c "cd app && yarn install"',
      \ })

call dein#add('lambdalisue/suda.vim', {
      \ 'lazy': 1,
      \ 'on_cmd': ['SudaRead', 'SudaWrite'],
      \ })

call dein#add('907th/vim-auto-save', {
      \ 'hook_add': 'source ' . s:plugins_dir . '/.nvimrc.vim-auto-save.preload',
      \ })

call dein#add('tpope/vim-fugitive', {
      \ 'lazy': 1,
      \ 'on_cmd': [
      \   'Git', 'Gstatus', 'Gwrite', 'Glog', 'Gdiffsplit',
      \   'Gcommit', 'Gblame', 'Ggrep', 'Gdiff',
      \ ],
      \ })

call dein#add('thinca/vim-quickrun', {
      \ 'lazy': 1,
      \ 'on_cmd': ['QuickRun'],
      \ 'on_map': [['nxo', '<Plug>(quickrun)']],
      \ 'hook_add': 'source ' . s:plugins_dir . '/.nvimrc.vim-quickrun.preload',
      \ 'hook_source': 'source ' . s:plugins_dir . '/.nvimrc.vim-quickrun',
      \ })

call dein#end()
call dein#save_state()

syntax enable
filetype plugin indent on

set secure
