"---------------------------------------------------------------------
" Edit
"---------------------------------------------------------------------
" IME off when normal mode
set noimdisable
set iminsert=0 imsearch=0
set noimcmdline
if executable('ibus')
  augroup Ibus
    autocmd!
    autocmd InsertLeave * call system('ibus engine "xkb:us::eng"')
  augroup END
endif

" add selected word to register
vnoremap p <Esc>:let current_reg = @"<CR>gvdi<C-R>=current_reg<CR><Esc>

" copy & paste by xsel
if executable('xsel')
  vmap <silent> <C-\> :w !xsel -ib<CR><CR>
  nmap <silent> <C-\> :r !xsel -ob<CR>
endif

" convert tab to space
set expandtab

" add space after comma
inoremap , ,<Space>

" undo on insert mode
inoremap <C-u> <C-g>u<C-u>

" backspace & delete
imap <C-b> <BS>

" paste yank on insert mode
" imap <C-o> <ESC>"*pa

" yank to line end
nmap y9 y$
" yank to line start
nmap y0 y^

" remove space & tab with saving
" function! s:remove_dust()
"     let cursor = getpos(".")
"     %s/\s\+$//ge
"     if &ft !~ 'make'
"       %s/\t/  /ge
"     endif
"     call setpos(".", cursor)
"     unlet cursor
" endfunction
" augroup RemoveDust
"   autocmd!
"   autocmd BufWritePre * call <SID>remove_dust()
" augroup END

" date completion
" inoremap <expr> <Leader>df strftime('%Y/%m/%d %H:%M:%S')
" inoremap <expr> <Leader>dd strftime('%Y/%m/%d')
" inoremap <expr> <Leader>dt strftime('%H:%M:%S')

" expand fold
set foldlevelstart=99
" .vim„ÅØmarker
augroup Fold
  autocmd!
  autocmd FileType vim,zsh :set foldmethod=marker
augroup END

" format JSON
" http://wozozo.hatenablog.com/entry/2012/02/08/121504
" map <Leader>j !python -m json.tool<CR>

" close quickfix by q,esc
augroup Qf
  autocmd!
  autocmd FileType qf nnoremap <buffer> q :ccl<CR>
  autocmd FileType qf nnoremap <buffer> <ESC> :ccl<CR>
augroup END

" toggle quickfix & location list
function! s:toggle_qf_ll_window(pfx)
  for bufnr in range(1,  winnr('$'))
    if getwinvar(bufnr,  '&buftype') ==# 'quickfix'
      execute a:pfx.'cl'
      return
    endif
  endfor
  execute a:pfx.'ope'
endfunction
nnoremap <silent> tq :<C-u>call <SID>toggle_qf_ll_window('c')<CR>
nnoremap <silent> tl :<C-u>call <SID>toggle_qf_ll_window('l')<CR>

command! CB let @+ = expand('%:p')
