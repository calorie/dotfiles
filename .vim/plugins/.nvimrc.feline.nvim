lua << EOT
  local vi_mode = require('feline.providers.vi_mode')

  local base = '#191724'
  local surface = '#25232e'
  local muted = '#6e6a86'
  local subtle = '#908caa'
  local text = '#c9c8db'
  local love = '#d66B7f'
  local gold = '#f3cc95'
  local rose = '#ebbcba'
  local pine = '#31748f'
  local foam = '#9ccfd8'
  local iris = '#c4a7e7'
  local blue_gray = '#8ac6f2'
  local highlight_med = '#403d52'

  local vi_mode_text = {
    NORMAL        = 'N',
    OP            = 'OP',
    INSERT        = 'I',
    VISUAL        = 'V',
    LINES         = 'V-L',
    BLOCK         = 'V-B',
    REPLACE       = 'R',
    ['V-REPLACE'] = 'V-R',
    ENTER         = 'ENTER',
    MORE          = 'MORE',
    SELECT        = 'S',
    COMMAND       = '',
    SHELL         = 'SHELL',
    TERM          = 'TERM',
    NONE          = 'NONE',
    CONFIRM       = 'CONFIRM'
  }

  local inactive_filetypes = {
    '^fern$',
    '^fugitiveblame$',
    '^qf$',
    '^git$',
    '^fugitive$',
    '^help$',
  }

  require('feline').setup({
    theme = {
      fg            = subtle,
      bg            = surface,
      black         = base,
      yellow        = gold,
      cyan          = foam,
      oceanblue     = blue_gray,
      green         = pine,
      orange        = rose,
      violet        = iris,
      magenta       = love,
      white         = text,
      skyblue       = blue_gray,
      red           = love,
      muted         = muted,
      text          = text,
      highlight_med = highlight_med,
    },
    default_fg = subtle,
    default_bg = surface,
    vi_mode_colors = {
      NORMAL        = 'fg',
      OP            = 'fg',
      INSERT        = 'fg',
      CONFIRM       = 'fg',
      VISUAL        = 'fg',
      LINES         = 'fg',
      BLOCK         = 'fg',
      REPLACE       = 'fg',
      ['V-REPLACE'] = 'fg',
      ENTER         = 'fg',
      MORE          = 'fg',
      SELECT        = 'fg',
      COMMAND       = 'fg',
      SHELL         = 'fg',
      TERM          = 'fg',
      NONE          = 'fg'
    },
    components = {
      active = {
        {
          {
            provider = function()
              return vi_mode_text[vi_mode.get_vim_mode()]
            end,
            hl = {
              fg = 'text',
              bg = 'highlight_med',
            },
            left_sep = {
              str = ' ',
              hl = {
                fg = 'text',
                bg = 'highlight_med'
              }
            },
            right_sep = {
              str = ' ',
              hl = {
                fg = 'text',
                bg = 'highlight_med'
              }
            },
          },
          {
            provider = {
              name = 'file_info',
              opts = {
                type = 'relative',
                file_modified_icon = '',
                file_readonly_icon = 'ðŸ”’ ',
              },
            },
            hl = {
              fg = 'fg',
              bg = 'bg',
            },
            left_sep = ' ',
            icon = '',
          },
        },
        {
          {
            provider = 'file_encoding',
            hl = {
              fg = 'fg',
              bg = 'bg',
            },
            right_sep = ' ',
          },
          {
            provider = 'position',
            hl = {
              fg = 'fg',
              bg = 'bg',
            },
            right_sep = ' ',
          },
          {
            provider = 'line_percentage',
            hl = {
              fg = 'fg',
              bg = 'bg',
            },
            right_sep = ' ',
          },
        },
      },
      inactive = {
        {
          {
            provider = {
              name = 'file_info',
              opts = {
                type = 'relative',
                file_modified_icon = '',
                file_readonly_icon = '',
              },
            },
            hl = {
              fg = 'muted',
              bg = 'bg',
            },
            left_sep = ' ',
            icon = '',
          },
        },
        {},
      },
    },
    conditional_components = {
      {
        condition = function()
          local ft = vim.api.nvim_buf_get_option(0, 'filetype')
          for _, v in ipairs(inactive_filetypes) do
              if ft:match(v) then
                  return true
              end
          end
          return false
        end,
        active = {},
        inactive = {
          {
            {
              provider = 'file_type',
              hl = {
                fg = 'muted',
                bg = 'bg',
              },
              left_sep = ' ',
            },
          },
        },
      }
    },
    force_inactive = {
      filetypes = inactive_filetypes,
      buftypes = {
        '^terminal$',
      },
      bufnames = {},
    },
  })
EOT
