# powerline
function powerline_precmd() {
  eval "$(powerline-go -error $? -shell zsh -eval -modules user,cwd,root)"
}

function install_powerline_precmd() {
  for s in "${precmd_functions[@]}"; do
    if [ "$s" = 'powerline_precmd' ]; then
      return
    fi
  done
  precmd_functions+=(powerline_precmd)
}

if [ "$TERM" != 'linux' ] && command -v powerline-go >/dev/null 2>&1; then
  install_powerline_precmd
fi

# direnv
if command -v direnv >/dev/null 2>&1; then
  eval "$(direnv hook zsh)"
fi

# Go
if [ -d $HOME/go ]; then
  export PATH="$HOME/go/bin:$PATH"
fi

# rbenv
if [ -d $HOME/.rbenv ]; then
  export RBENV_ROOT=$HOME/.rbenv
  export PATH="$RBENV_ROOT/shims:$PATH"
  eval "$(rbenv init - --no-rehash zsh)"
fi

# nodenv
if [ -d $HOME/.nodenv ]; then
  export PATH="$HOME/.nodenv/shims:$PATH"
  eval "$(nodenv init -)"
fi

# ripgrep
export RIPGREP_CONFIG_PATH=$HOME/.ripgreprc

# peco
function peco-select-history() {
  local tac
  if which tac > /dev/null; then
    tac='tac'
  else
    tac='tail -r'
  fi
  BUFFER=$(history -n 1 | eval $tac | peco --query "$LBUFFER")
  CURSOR=$#BUFFER
  zle clear-screen
}
zle -N peco-select-history

bindkey '^R' peco-select-history

# enhancd
if [ -d $HOME/enhancd ]; then
  export ENHANCD_FILTER=peco
  source $HOME/enhancd/init.sh
fi

# misc
function mkcd() { mkdir -p $1 && cd $1; }
